{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "fd08135d-816a-4fae-a46a-911912ae8fcf": {
        "id": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "parent": null,
        "name": "hs-vendor-app",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "e4ca324f-b74b-44ed-97ba-6b798cfe545f",
          "c62037a7-4149-44c0-835d-28bea00bf5ef",
          "870a289b-af32-4401-9f3f-8f5c7dcb4c7d",
          "e6cb3bc8-931a-44f6-b32d-b08d45b23e00",
          "1ddba725-c089-4675-bd6a-f3abdc2d2eb5",
          "282c73b2-f1f4-4515-92e8-93c794198bae",
          "9d296e61-e688-46fe-b50c-f9cff6c7b215",
          "58573c79-2e04-4440-b173-512ede46cba4",
          "d370cbff-49e8-4db1-aca3-531a2294c96a",
          "598b2910-e4cd-4ee5-b395-ca95f0ac0b2f",
          "21490d7f-e8cc-4cc9-87b0-f2915e0d56b5"
        ],
        "isRemovable": false,
        "filePath": "hs-vendor-app"
      },
      "e4ca324f-b74b-44ed-97ba-6b798cfe545f": {
        "id": "e4ca324f-b74b-44ed-97ba-6b798cfe545f",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "addUser.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/addUser.js",
        "code": "let AWS = require('aws-sdk');\nconst cognito_idp = new AWS.CognitoIdentityServiceProvider();\nlet dynamoDBService = require('./dynamoDBService');\nlet utils = require('./utils');\n\nexports.handler = function (event, context, callback) {\n\n    if (utils.authorize(event, callback)) {\n\n        let body = JSON.parse(event.body);\n        let name = body.name;\n        let email = body.email;\n        let phone_number = body.phone_number;\n        let temp_password = body.temp_password;\n        let role = body.role;\n        let vendorId = body.vendor_id;\n\n        cognito_idp.adminCreateUser({\n            UserPoolId: \"us-east-1_mcdTV1jKi\",\n            Username: `${email}`,\n            DesiredDeliveryMediums: [\"EMAIL\", \"SMS\"],\n            ForceAliasCreation: false,\n            TemporaryPassword: `${temp_password}`,\n            UserAttributes: [{\n                Name: \"name\",\n                Value: `${name}`\n            }, {\n                Name: \"email\",\n                Value: `${email}`\n            }, {\n                Name: \"phone_number\",\n                Value: `${phone_number}`\n            }],\n            ValidationData: []\n        }, function (error, data) {\n            if (error) {\n                console.log(error);\n                callback(null, {\n                    \"isBase64Encoded\": true,\n                    \"statusCode\": 502,\n                    \"headers\": {\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"*\"\n                    },\n                    \"body\": error.message\n                });\n            } else {\n                console.log(data);\n                dynamoDBService.addUser({\n                    uid: data.User.Username,\n                    name: name,\n                    role: role,\n                    vendor_id: vendorId\n                }).then(function () {\n                    callback(null, {\n                        \"isBase64Encoded\": true,\n                        \"statusCode\": 200,\n                        \"headers\": {\n                            \"Access-Control-Allow-Origin\": \"*\",\n                            \"Access-Control-Allow-Methods\": \"*\"\n                        },\n                        \"body\": 'Successfully added vendor with name : ' + name\n                    });\n                }).catch(function (error) {\n                    console.log(error);\n                    callback(null, {\n                        \"isBase64Encoded\": true,\n                        \"statusCode\": 502,\n                        \"headers\": {\n                            \"Access-Control-Allow-Origin\": \"*\",\n                            \"Access-Control-Allow-Methods\": \"*\"\n                        },\n                        \"body\": 'User added to cognito pool but failed to add to dynamo DB. ' + error.message\n                    });\n                });\n\n            }\n        });\n    }\n}\n",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2userpost",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        }
      },
      "c62037a7-4149-44c0-835d-28bea00bf5ef": {
        "id": "c62037a7-4149-44c0-835d-28bea00bf5ef",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "addVendor.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/addVendor.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\nlet utils = require('./utils');\n\nexports.handler = function (event, context, callback) {\n\n    if (utils.authorize(event, callback)) {\n        \n        let body = JSON.parse(event.body);\n        let vendorName = body.name;\n        let vendor = {\n            name: vendorName\n        }\n        dynamoDBService.addVendor(vendor).then(function (data) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": 'Successfully added vendor with name : ' + vendorName\n            });\n        }).catch(function (err) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": err.message\n            });\n        });\n    }\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2vendorpost",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        }
      },
      "870a289b-af32-4401-9f3f-8f5c7dcb4c7d": {
        "id": "870a289b-af32-4401-9f3f-8f5c7dcb4c7d",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "dynamoDBService.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/dynamoDBService.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nconst uuidv4 = require('uuid/v4');\n\nmodule.exports = {\n\n    getUser: function (userId) {\n        return ddb.query({\n            TableName: 'HS_user',\n            ExpressionAttributeValues: {\n                ':user_id': userId\n            },\n            KeyConditionExpression: 'user_id = :user_id'\n        }).promise()\n\n    },\n\n    /*\n     userData={\n         name : string,\n         role : string,\n         vender_id : string\n     }\n     */\n    addUser: function (userData) {\n        let userId = userData.uid;\n        let name = userData.name;\n        let role = userData.role;\n        let vendor_id = userData.vendor_id;\n        return ddb.put({\n            TableName: 'HS_user',\n            Item: {\n                'user_id': userId,\n                'name': name,\n                'role': role,\n                'vendor_id': vendor_id\n            }\n        }).promise();\n    },\n\n    /*\n     userData={\n         name : string\n     }\n     */\n    addVendor: function (vendorData) {\n        let vendorId = uuidv4();\n        let name = vendorData.name;\n        return ddb.put({\n            TableName: 'HS_vendor',\n            Item: {\n                'vendor_id': vendorId,\n                'name': name\n            }\n        }).promise();\n    },\n\n    getVendors: function () {\n        return ddb.scan({\n            TableName: 'HS_vendor'\n        }).promise();\n\n    },\n\n    addPromo: function (promoData) {\n        return ddb.put({\n            TableName: 'Promotions',\n            Item: {\n                'PromoId': promoData.promoId,\n                'VendorId': promoData.vendorId,\n                'OfferType': promoData.offerType,\n                'StartDate': promoData.startDate,\n                'EndDate': promoData.endDate,\n                'selectedDays': promoData.selectedDays,\n                'Description': promoData.description,\n                'UnitPrice': promoData.unitPrice,\n                'Title': promoData.title,\n                'ImgUrls': promoData.imgUrls,\n                'Discount': promoData.discount,\n                'Terms': promoData.terms,\n                'BusinessType': promoData.businessType\n            }\n        }).promise();\n    },\n\n    getPromo: function (vendor) {\n        return ddb.scan({\n            TableName: 'Promotions',\n            ExpressionAttributeValues: {\n                ':vendor': vendor\n            },\n            FilterExpression: 'VendorId = :vendor'\n        }).promise();\n    }\n}",
        "triggers": []
      },
      "e6cb3bc8-931a-44f6-b32d-b08d45b23e00": {
        "id": "e6cb3bc8-931a-44f6-b32d-b08d45b23e00",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "getVendors.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/getVendors.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\nlet utils = require('./utils');\n\nexports.handler = function (event, context, callback) {\n\n    if (utils.authorize(event, callback)) {\n        dynamoDBService.getVendors().then(function (data) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(data.Items)\n            });\n        }).catch(err => {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": err.message\n            })\n        });\n    }\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2vendorlistget",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        },
        "testCases": {
          "a61b072e-9140-4326-9b8f-a4b983d3b4a5": {
            "id": "a61b072e-9140-4326-9b8f-a4b983d3b4a5",
            "name": "Unnamed event",
            "functionId": "e6cb3bc8-931a-44f6-b32d-b08d45b23e00",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      },
      "1ddba725-c089-4675-bd6a-f3abdc2d2eb5": {
        "id": "1ddba725-c089-4675-bd6a-f3abdc2d2eb5",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "utils.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/utils.js",
        "code": "module.exports = {\n    authorize: function (event, callback) {\n        if (!event.headers || !event.headers[\"Authorization\"] || event.headers[\"Authorization\"] !== 'hotspaces2018#') {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 403,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": 'Authorization failed'\n            });\n        } else {\n            return true;\n        }\n    }\n}",
        "triggers": []
      },
      "282c73b2-f1f4-4515-92e8-93c794198bae": {
        "id": "282c73b2-f1f4-4515-92e8-93c794198bae",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "getUser.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/getUser.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\nlet utils = require('./utils');\n\nexports.handler = function (event, context, callback) {\n    \n    let userId = event[\"queryStringParameters\"]['userid'];\n\n    if (utils.authorize(event, callback) && userId) {\n       \n        dynamoDBService.getUser(userId).then(data => {\n            let items = data.Items;\n\n            if (items.length > 0) {\n                callback(null, {\n                    \"isBase64Encoded\": true,\n                    \"statusCode\": 200,\n                    \"headers\": {\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"*\"\n                    },\n                    \"body\": JSON.stringify(items[0])\n                });\n            } else {\n                callback(null, {\n                    \"isBase64Encoded\": true,\n                    \"statusCode\": 502,\n                    \"headers\": {\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"*\"\n                    },\n                    \"body\": 'No user with the provided user id'\n                });\n            }\n\n        }).catch(error => {\n            console.log(error);\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": 'Faild to retreive the user for id : ' + userId\n            });\n        })\n    } else {\n        callback(null, {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 502,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": 'User id is missing in query params.'\n        });\n    }\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2userget",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        },
        "testCases": {
          "05d2b081-1d41-4813-a01f-47a592438bae": {
            "id": "05d2b081-1d41-4813-a01f-47a592438bae",
            "name": "Unnamed event",
            "functionId": "282c73b2-f1f4-4515-92e8-93c794198bae",
            "event": "{\n    \"userid\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      },
      "9d296e61-e688-46fe-b50c-f9cff6c7b215": {
        "id": "9d296e61-e688-46fe-b50c-f9cff6c7b215",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "getVendors_auth.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/getVendors_auth.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\nlet authService = require('./authService');\n\nexports.handler = function (event, context, callback) {\n    let userUUID = event[\"queryStringParameters\"]['uuid'];\n    let userName = event[\"queryStringParameters\"]['username'];\n\n    authService.validateUser(userUUID, userName, function (response) {\n        if (response.error) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(response.error)\n            });\n        } else if (response.validated) {\n            getVendors(callback);\n        } else {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 403,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": \"User validation failed.\"\n            });\n        }\n    })\n}\n\nfunction getVendors(callback) {\n    dynamoDBService.getVendors().then(function (data) {\n        console.log(data);\n        callback(null, {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 200,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": JSON.stringify(data.Items)\n        });\n    }).catch(err => {\n        console.log(err);\n        callback(null, {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 502,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": err.message\n        })\n    });\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2vendorlistauthget",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        }
      },
      "58573c79-2e04-4440-b173-512ede46cba4": {
        "id": "58573c79-2e04-4440-b173-512ede46cba4",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "authService.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/authService.js",
        "code": "let axios = require('axios');\n\nmodule.exports = {\n    \n    validateUser: function (userUUID, userName, callback) {\n        let headers = {};\n        headers['Authorization'] = 'hotspacesAdmin2018#';\n        axios.get('https://us-central1-hotspa-beta.cloudfunctions.net/user/' + userUUID, { headers: headers }).then((response) => {\n            if (response.data[\"username\"] == userName) {\n                callback({ validated: true, error: null });\n            } else {\n                callback({ validated: false, error: null });\n            }\n        }).catch((err) => {\n            console.log(err);\n            callback({ validated: false, error: err });\n        });\n    },\n}",
        "triggers": []
      },
      "d370cbff-49e8-4db1-aca3-531a2294c96a": {
        "id": "d370cbff-49e8-4db1-aca3-531a2294c96a",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "getVendor_auth.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/getVendor_auth.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\nlet authService = require('./authService');\n\nexports.handler = function (event, context, callback) {\n\n    let userUUID = event[\"queryStringParameters\"]['uuid'];\n    let userName = event[\"queryStringParameters\"]['username'];\n    let vendor_id = event[\"pathParameters\"]['vendor_id'];\n\n    authService.validateUser(userUUID, userName, function (response) {\n        if (response.error) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(response.error)\n            });\n        } else if (response.validated) {\n            getVendor(vendor_id, callback);\n        } else {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 403,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": \"User validation failed.\"\n            });\n        }\n    });\n\n    callback(null, 'Successfully executed');\n}\n\nfunction getVendor(vendorId, callback) {\n    dynamoDBService.getVendor(vendorId).then(data => {\n        let items = data.Items;\n        console.log(items);\n\n        if (items.length > 0) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(items[0])\n            });\n        } else {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": 'No user with the provided user id'\n            });\n        }\n\n    }).catch(error => {\n        console.log(error);\n        callback(null, {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 502,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": 'Faild to retreive the user for id : ' + userId\n        });\n    })\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2vendorauthvendoridget",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 300,
          "runtime": "nodejs8.10"
        }
      },
      "598b2910-e4cd-4ee5-b395-ca95f0ac0b2f": {
        "id": "598b2910-e4cd-4ee5-b395-ca95f0ac0b2f",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "addPromo.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/addPromo.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\n\nexports.handler = function(event, context, callback) {\n    \n    let body = JSON.parse(event.body);\n    let promoData = {\n        promoId : uuidv4(),\n        vendorId : body.vendorId,\n        offerType : body.offerType,\n        discount : body.discount,\n        startDate : body.startDate,\n        endDate : body.endDate,\n        selectedDays : body.selectedDays,\n        description : body.description,\n        title : body.title,\n        unitPrice : body.unitPrice,\n        imgUrl : body.imgUrls,\n        terms : body.terms,\n        businessType : body.businessType\n    };\n\n    dynamoDBService.addPromo(promoData).then(function (data) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": 'Successfully added vendor with name : ' + vendorName\n            });\n        }).catch(function (err) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": err.message\n            });\n        });\n        \n    callback(null,'Successfully executed');\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2promopost",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 60,
          "runtime": "nodejs8.10"
        }
      },
      "21490d7f-e8cc-4cc9-87b0-f2915e0d56b5": {
        "id": "21490d7f-e8cc-4cc9-87b0-f2915e0d56b5",
        "parent": "fd08135d-816a-4fae-a46a-911912ae8fcf",
        "name": "getPromo.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hs-vendor-app/getPromo.js",
        "code": "let AWS = require('aws-sdk');\nlet dynamoDBService = require('./dynamoDBService');\n\nexports.handler = function(event, context, callback) {\n    \n    dynamoDBService.getPromo.then(function (data) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(data.Items)\n            });\n        }).catch(function (err) {\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": err.message\n            });\n        });\n    callback(null,'Successfully executed');\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1HSVendor2promoget",
            "config": {}
          }
        ],
        "config": {
          "memory": 128,
          "timeout": 60,
          "runtime": "nodejs8.10"
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "fd08135d-816a-4fae-a46a-911912ae8fcf",
    "openFiles": [
      "870a289b-af32-4401-9f3f-8f5c7dcb4c7d",
      "598b2910-e4cd-4ee5-b395-ca95f0ac0b2f",
      "21490d7f-e8cc-4cc9-87b0-f2915e0d56b5",
      "e6cb3bc8-931a-44f6-b32d-b08d45b23e00"
    ],
    "currentFileId": "e6cb3bc8-931a-44f6-b32d-b08d45b23e00",
    "resources": {
      "cognitoHotSpacesVendorAppDev": {
        "name": "cognitoHotSpacesVendorAppDev",
        "type": "CognitoIdentityServiceProvider",
        "config": {
          "mode": 1,
          "name": "HotSpaces Vendor App Dev",
          "arn": "arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_mcdTV1jKi",
          "userPool": {
            "Id": "us-east-1_mcdTV1jKi",
            "Name": "HotSpaces Vendor App Dev",
            "LambdaConfig": {},
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireUppercase": false,
                "RequireLowercase": false,
                "RequireNumbers": false,
                "RequireSymbols": false
              }
            },
            "AutoVerifiedAttributes": [
              "email",
              "phone_number"
            ],
            "UsernameAttributes": [
              "email",
              "phone_number"
            ],
            "SmsVerificationMessage": "Your verification code is {####}. ",
            "EmailVerificationMessage": "Your verification code is {####}. ",
            "EmailVerificationSubject": "Your verification code",
            "VerificationMessageTemplate": {
              "SmsMessage": "Your verification code is {####}. ",
              "EmailMessage": "Your verification code is {####}. ",
              "EmailSubject": "Your verification code",
              "EmailMessageByLink": "Please click the link below to verify your email address. {##Verify Email##} ",
              "EmailSubjectByLink": "[HotSpaces] Your verification link",
              "DefaultEmailOption": "CONFIRM_WITH_LINK"
            },
            "SmsAuthenticationMessage": "Your authentication code is {####}. ",
            "MfaConfiguration": "OFF",
            "EmailConfiguration": {},
            "SmsConfiguration": {
              "SnsCallerArn": "arn:aws:iam::318300609668:role/service-role/HotSpacesVendorAppDev-SMS-Role",
              "ExternalId": "76e0044a-336d-4127-8d16-8f48e087a9e0"
            },
            "UserPoolTags": {},
            "AdminCreateUserConfig": {
              "AllowAdminCreateUserOnly": true,
              "UnusedAccountValidityDays": 30,
              "InviteMessageTemplate": {
                "SMSMessage": "Your username for HotSpaces vendor app is {username} and temporary password is {####}. ",
                "EmailMessage": "Your username for HotSpaces vendor app is {username} and temporary password is {####}. ",
                "EmailSubject": "[HotSpaces] Your temporary password"
              }
            },
            "SchemaAttributes": [
              {
                "Name": "sub",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": false,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "1",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "given_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "family_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "middle_name",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "nickname",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "preferred_username",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "profile",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "picture",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "website",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "email",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "email_verified",
                "AttributeDataType": "Boolean",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false
              },
              {
                "Name": "gender",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "birthdate",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "10",
                  "MaxLength": "10"
                }
              },
              {
                "Name": "zoneinfo",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "locale",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "phone_number",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "phone_number_verified",
                "AttributeDataType": "Boolean",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false
              },
              {
                "Name": "address",
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "StringAttributeConstraints": {
                  "MinLength": "0",
                  "MaxLength": "2048"
                }
              },
              {
                "Name": "updated_at",
                "AttributeDataType": "Number",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Required": false,
                "NumberAttributeConstraints": {
                  "MinValue": "0"
                }
              }
            ]
          }
        },
        "globallyEditable": false
      },
      "ddbHSuser": {
        "name": "ddbHSuser",
        "type": "DynamoDB",
        "config": {
          "mode": 1,
          "operation": "query",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/HS_user",
            "name": "HS_user",
            "partitionKey": "user_id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "TableName": "HS_user",
            "ExpressionAttributeValues": {
              ":user_id": "@{userId}",
              ":hh": "sss"
            },
            "KeyConditionExpression": " S :hh"
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "ddbHSvendor": {
        "name": "ddbHSvendor",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "get",
          "table": {
            "arn": "",
            "name": "HS_vendor",
            "partitionKey": "vendor_id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "Key": {
              "vendor_id": "vendor_id"
            },
            "Item": {},
            "ExpressionAttributeValues": {}
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "ddbPromotions": {
        "name": "ddbPromotions",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "scan",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/Promotions",
            "name": "Promotions",
            "partitionKey": "PromoId",
            "partitionKeyType": "S",
            "hasSortKey": true,
            "sortKey": "VendorId",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "TableName": "Promotions",
            "ExpressionAttributeValues": {
              ":vendor": "@{vendor}"
            },
            "FilterExpression": "VendorId = :vendor"
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2userpost": {
        "name": "apigusEast1HSVendor2userpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "user",
          "resourcePath": "/user",
          "restMethod": "POST",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2vendorlistget": {
        "name": "apigusEast1HSVendor2vendorlistget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "vendor/list",
          "resourcePath": "/vendor/list",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2userget": {
        "name": "apigusEast1HSVendor2userget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "user",
          "resourcePath": "/user",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2vendorauthvendoridget": {
        "name": "apigusEast1HSVendor2vendorauthvendoridget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "vendor/auth/{vendor_id}",
          "resourcePath": "/vendor/auth/{vendor_id}",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2vendorpost": {
        "name": "apigusEast1HSVendor2vendorpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "vendor",
          "resourcePath": "/vendor",
          "restMethod": "POST",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2vendorlistauthget": {
        "name": "apigusEast1HSVendor2vendorlistauthget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "vendor/list/auth",
          "resourcePath": "/vendor/list/auth",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2promopost": {
        "name": "apigusEast1HSVendor2promopost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "promo",
          "resourcePath": "/promo",
          "restMethod": "POST",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1HSVendor2promoget": {
        "name": "apigusEast1HSVendor2promoget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "HS_Vendor2",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "promo",
          "resourcePath": "/promo",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      }
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "notRemovable": true
        },
        "uuid": {
          "name": "uuid",
          "version": "3.3.2"
        },
        "axios": {
          "name": "axios",
          "version": "0.18.0"
        }
      }
    },
    "lambdaId": "e4ca324f-b74b-44ed-97ba-6b798cfe545f"
  },
  "PROJECT_META": {
    "projectName": "hs-vendor-app",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "lastSave": 1541737926670
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "hs-vendor-app2",
      "url": "https://github.com/TestAndunR/hs-vendor-app2"
    }
  }
}